name: Manual Permit Test

on:
  workflow_dispatch:
    inputs:
      county:
        description: 'County to test (miami-dade, hillsborough, or both)'
        required: true
        default: 'both'
        type: choice
        options:
        - both
        - miami-dade
        - hillsborough
      days_back:
        description: 'Number of days back to fetch'
        required: true
        default: '1'
        type: string
      max_records:
        description: 'Max records for testing'
        required: true
        default: '10'
        type: string

jobs:
  test-permits:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create directories
      run: |
        mkdir -p data/raw data/processed data/cache logs
    
    - name: Test pipeline
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      run: |
        echo "🔍 Testing permit pipeline..."
        echo "County: ${{ github.event.inputs.county }}"
        echo "Days back: ${{ github.event.inputs.days_back }}"
        echo "Max records: ${{ github.event.inputs.max_records }}"
        
        python main.py --days ${{ github.event.inputs.days_back }} --max-records ${{ github.event.inputs.max_records }}
    
    - name: Show test results
      if: always()
      run: |
        echo "# 🧪 Permit Pipeline Test Results" >> $GITHUB_STEP_SUMMARY
        echo "**County:** ${{ github.event.inputs.county }}" >> $GITHUB_STEP_SUMMARY
        echo "**Days Back:** ${{ github.event.inputs.days_back }}" >> $GITHUB_STEP_SUMMARY
        echo "**Max Records:** ${{ github.event.inputs.max_records }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "logs/pipeline.log" ]; then
          echo "## 📊 Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat logs/pipeline.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          logs/
          data/processed/
        retention-days: 7
